#
# Minimal Sphinx configuration sample (clean, simple, functional)
#
#31 20  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress --rotate
#41 20  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress_ja --rotate
#51 20  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress_fr --rotate
#31 0  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress --rotate
#41 0  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress_fr --rotate
#51 0  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress_ja --rotate
#31 3  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress --rotate
#41 3  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress_fr --rotate
#51 3  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress_ja --rotate
#31 5  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress --rotate
#41 5  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress_fr --rotate
#51 5  * * * /usr/local/ver01/sphinx/bin/indexer --config /usr/local/ver01/sphinx/etc/sphinx.conf  sammydress_ja --rotate

source twinkledeals
{
        type                                    = mysql
 
        sql_host                                = 192.168.6.71
        sql_user                                = root
        sql_pass                                = NvGHHsQvo3!90YS@
        sql_db                                  = twinkledeals_db
       #sql_sock                          =  /usr/local/ver01/mysql/var/mysql.sock
        sql_port                                = 3306  # optional, default is 3306
		sql_query_pre = SET NAMES utf8
		sql_query_pre = REPLACE INTO eload_sphinx_counter SELECT 'twinkledeals',MAX(update_time),UNIX_TIMESTAMP() FROM eload_goods
        sql_query				= \
select g.goods_id,g.is_BF,is_24h_ship,ge.is_distribution,LENGTH(TRIM(`goods_brand`)) as goods_brand_len,g.goods_sn, g.goods_title, g.goods_name, ge.unsalable, ge.recommended_level, g.goods_brief, g.add_time,g.last_update, g.sort_order, g.group_goods_id, g.point_rate, promote_start_date, promote_end_date, promote_price, g.recommendation, \
((g.week2sale+1)*LN((IF (ge.available_stock <= 0, 0, ge.available_stock ))+1) ) as cxj, if(ge.img_type=2,1,(if(ge.img_type=1,2,3))) as self_img_type, \
g.is_free_shipping, g.is_hot,g.is_new, g.is_promote, g.week1sale, g.week2sale, g.potential, g.click_count,IF (g.promote_start_date < UNIX_TIMESTAMP() AND g.promote_end_date > UNIX_TIMESTAMP() AND g.promote_price <> '0.00',g.promote_price,g.shop_price) AS real_shop_price, IF (sr.sort_order>=0 AND sr.start_time < UNIX_TIMESTAMP() AND sr.end_time > UNIX_TIMESTAMP() AND sr.status=1,sr.sort_order,999) AS rc_sort, sr.id as rc_id, g.shop_price, g.is_login, g.cat_id, \
(if(goods_number=0 OR is_on_sale = 0 OR is_delete = 1,0,1)) as goods_number,gc.conversion_rate,gc.conversion_rate2,ge.goods_grade,ge.facebook_like_count,ge.like_count, \
 ge.recommended_time,ge.shelf_down_type, ge.clearance_discount, ge.clearance_date, ge.goods_model,(if(ge.real_stock=0,0,1)) as real_stock,\
(if(is_on_sale = 0 OR is_delete = 1,0,1)) as is_on_dispaly,if((g.week2sale-g.week1sale)=0,0,g.week1sale/((g.week2sale-g.week1sale))) as week_percent,\
 CONCAT_WS(' ',g.goods_title,GROUP_CONCAT(ga.attr_value separator ' '),replace(replace(g.goods_search_attr,',',''),'_',' ')) AS goods_title_color_size, \
                       ge.review_count AS reviews, CONCAT_WS(' ',g.goods_search_attr,CONCAT(',',GROUP_CONCAT(ga.attr_value separator ', ,'),',')) AS goods_attr, \
					   REPLACE(g.goods_search_attr,',','') AS goods_search_attr_test, \
                       CONCAT(IF(g.promote_start_date<UNIX_TIMESTAMP() AND g.promote_end_date>UNIX_TIMESTAMP(), 2, 1), EXISTS(SELECT goods_id FROM eload_goods_tuijian WHERE goods_id=g.goods_id AND (is_best=1 OR is_new=1 OR is_hot=1))) AS hot_order \
                FROM eload_goods as g \
                LEFT JOIN eload_goods_extend as ge ON g.goods_id = ge.goods_id \
                LEFT JOIN eload_goods_attr as ga ON g.goods_id = ga.goods_id \
		LEFT JOIN eload_goods_conversion_rate AS gc ON g.goods_id=gc.goods_id \
		LEFT JOIN eload_search_recommend AS sr ON g.goods_id=sr.goods_id \
                WHERE g.is_alone_sale = 1 AND g.goods_thumb != '' AND g.is_on_sale = 1 AND g.is_delete = 0  GROUP BY g.goods_id
				
sql_attr_uint	     = is_BF
sql_attr_uint        = self_img_type
sql_attr_timestamp   = add_time
sql_attr_timestamp   = recommended_time
sql_attr_uint        = shelf_down_type
sql_attr_uint        = clearance_date
sql_attr_float    =clearance_discount
sql_attr_timestamp   = last_update
sql_attr_float  = conversion_rate
sql_attr_float  = conversion_rate2
sql_attr_float   = week_percent
sql_attr_uint    = is_24h_ship
sql_attr_uint    = is_distribution
sql_attr_uint   = sort_order
sql_attr_uint    =goods_grade
sql_attr_uint    = goods_number
sql_attr_uint    = real_stock
sql_attr_uint    = is_on_dispaly
sql_attr_uint    = group_goods_id
sql_attr_float    = point_rate
sql_attr_uint    = is_free_shipping
sql_attr_uint   = recommended_level
sql_attr_uint   = unsalable
sql_attr_uint    = is_hot
sql_attr_uint    = reviews
sql_attr_uint    = week1sale
sql_attr_uint    = week2sale
sql_attr_float    = potential
sql_attr_uint    = click_count
sql_attr_uint   = rc_sort
sql_attr_uint   = rc_id
sql_attr_float    =real_shop_price
sql_attr_float    =shop_price
sql_attr_uint    =is_login
sql_attr_uint    =cat_id
sql_attr_uint    =is_new
sql_attr_uint    =is_promote
sql_attr_uint    =hot_order
sql_attr_uint    = promote_start_date
sql_attr_uint    = promote_end_date
sql_attr_float    =promote_price
sql_attr_float    = recommendation
sql_attr_uint    =facebook_like_count
sql_field_string = goods_model
sql_attr_uint    =like_count
sql_attr_uint    =goods_brand_len
sql_attr_float   = cxj
sql_attr_multi   = uint cat_id_all from query; SELECT goods_id,cat_id FROM (SELECT goods_id,cat_id FROM eload_goods UNION SELECT goods_id,cat_id FROM eload_goods_cat) AS t
sql_attr_multi   = uint crc32 from query; SELECT goods_id,crc32 FROM eload_goods_desc_info where crc32 >0
}


source twinkledeals_fr
{
        type                                    = mysql
 
        sql_host                                = 192.168.6.71
        sql_user                                = root
        sql_pass                                = NvGHHsQvo3!90YS@
        sql_db                                  = twinkledeals_db
       #sql_sock                          =  /usr/local/ver01/mysql/var/mysql.sock
        sql_port                                = 3306  # optional, default is 3306
		sql_query_pre = SET NAMES utf8
		sql_query_pre = REPLACE INTO eload_sphinx_counter SELECT 'twinkledeals_fr',MAX(last_update_time),UNIX_TIMESTAMP() FROM eload_goods
        sql_query				= \
select g.goods_id,g.is_BF,is_24h_ship,ge.is_distribution,LENGTH(TRIM(`goods_brand`)) as goods_brand_len,g.goods_sn, gfr.goods_title, gfr.goods_name, ge.unsalable, ge.recommended_level, g.goods_brief, g.add_time,g.last_update, g.sort_order, g.group_goods_id, g.point_rate, promote_start_date, promote_end_date, promote_price, g.recommendation, \
((g.week2sale+1)*LN((IF (ge.available_stock <= 0, 0, ge.available_stock ))+1) ) as cxj, if(ge.img_type=2,1,(if(ge.img_type=1,2,3))) as self_img_type, \
g.is_free_shipping, g.is_hot,g.is_new, g.is_promote, g.week1sale, g.week2sale,g.potential, g.click_count,IF (g.promote_start_date < UNIX_TIMESTAMP() AND g.promote_end_date > UNIX_TIMESTAMP() AND g.promote_price <> '0.00',g.promote_price,g.shop_price) AS real_shop_price, g.shop_price, g.is_login, g.cat_id, \
(if(goods_number=0 OR is_on_sale = 0 OR is_delete = 1,0,1)) as goods_number, gc.conversion_rate,gc.conversion_rate2,ge.goods_grade,ge.facebook_like_count,ge.like_count, \
 ge.recommended_time,ge.shelf_down_type, ge.clearance_discount, ge.clearance_date, ge.goods_model,(if(ge.real_stock=0,0,1)) as real_stock,\
(if(is_on_sale = 0 OR is_delete = 1,0,1)) as is_on_dispaly,if((g.week2sale-g.week1sale)=0,0,g.week1sale/((g.week2sale-g.week1sale))) as week_percent, \
 CONCAT_WS(' ',g.goods_title,GROUP_CONCAT(ga.attr_value separator ' '),replace(replace(g.goods_search_attr,',',''),'_',' ')) AS goods_title_color_size, \
                       ge.review_count AS reviews, CONCAT_WS(' ',gfr.goods_search_attr,CONCAT(',',GROUP_CONCAT(ga.attr_value separator ', ,'),',')) AS goods_attr, \
					   REPLACE(gfr.goods_search_attr,',','') AS goods_search_attr_test, \
                       CONCAT(IF(g.promote_start_date<UNIX_TIMESTAMP() AND g.promote_end_date>UNIX_TIMESTAMP(), 2, 1), EXISTS(SELECT goods_id FROM eload_goods_tuijian WHERE goods_id=g.goods_id AND (is_best=1 OR is_new=1 OR is_hot=1))) AS hot_order \
                FROM eload_goods as g \
				JOIN `eload_goods_fr` AS `gfr` ON((`gfr`.`goods_id` = `g`.`goods_id`)) \
                LEFT JOIN eload_goods_extend as ge ON g.goods_id = ge.goods_id \
                LEFT JOIN eload_goods_attr as ga ON g.goods_id = ga.goods_id \
		LEFT JOIN eload_goods_conversion_rate AS gc ON g.goods_id=gc.goods_id \
                WHERE g.is_alone_sale = 1 AND g.goods_thumb != '' AND g.is_on_sale = 1 AND g.is_delete = 0  GROUP BY g.goods_id

sql_attr_uint	     = is_BF
sql_attr_uint        = self_img_type
sql_attr_timestamp   = add_time
sql_attr_timestamp   = recommended_time
sql_attr_uint        = shelf_down_type
sql_attr_uint        = clearance_date
sql_attr_float    =clearance_discount
sql_attr_timestamp   = last_update
sql_attr_float  = conversion_rate
sql_attr_float  = conversion_rate2
sql_attr_float   = week_percent
sql_attr_uint    = ddd
sql_attr_uint    = is_24h_ship
sql_attr_uint    = is_distribution
sql_attr_uint   = sort_order
sql_attr_uint    =goods_grade
sql_attr_uint    = goods_number
sql_attr_uint    = real_stock
sql_attr_uint    = is_on_dispaly
sql_attr_uint    = group_goods_id
sql_attr_float    = point_rate
sql_attr_uint    = is_free_shipping
sql_attr_uint   = recommended_level
sql_attr_uint   = unsalable
sql_attr_uint    = is_hot
sql_attr_uint    = reviews
sql_attr_uint    = week1sale
sql_attr_uint    = week2sale
sql_attr_float    = potential
sql_attr_uint    = click_count
sql_attr_float    =real_shop_price
sql_attr_float    =shop_price
sql_attr_uint    =is_login
sql_attr_uint    =cat_id
sql_attr_uint    =is_new
sql_attr_uint    =is_promote
sql_attr_uint    =hot_order
sql_attr_uint    = promote_start_date
sql_attr_uint    = promote_end_date
sql_attr_float    =promote_price
sql_attr_float    = recommendation
sql_attr_uint    =facebook_like_count
sql_field_string = goods_model
sql_attr_uint    =like_count
sql_attr_uint    =goods_brand_len
sql_attr_float   = cxj
sql_attr_multi   = uint cat_id_all from query; SELECT goods_id,cat_id FROM (SELECT goods_id,cat_id FROM eload_goods UNION SELECT goods_id,cat_id FROM eload_goods_cat) AS t
sql_attr_multi   = uint crc32 from query; SELECT goods_id,crc32 FROM eload_goods_desc_info where crc32 >0
}
index twinkledeals
{
    source               =  twinkledeals
    path                 = /usr/local/sphinx/var/data/twinkledeals
    docinfo              = extern
    enable_star          = 1
    charset_type         = utf-8
    infix_fields         = goods_sn,goods_brief,goods_title,goods_name,goods_title_color_size,goods_search_attr_test
    min_infix_len        = 1
    charset_table        = 0..9,A..Z->a..z,a..z,U+2C,U+2E,U+2B,U+5F,U+7B,U+7D,U+5E,U+43,U+26,U+28,U+29,U+2F,U+2D
}
index twinkledeals_fr {
    source                  = twinkledeals_fr
    path                    = /usr/local/sphinx/var/data/twinkledeals_fr
    docinfo                 = extern
    enable_star             = 1
    charset_type            = utf-8
    infix_fields            = goods_sn,goods_brief,goods_title,goods_name,goods_title_color_size,goods_search_attr_test
    min_infix_len           = 1
    charset_table		= 0..9,A..Z->a..z,a..z,U+2C,U+2E,U+2B,U+5F,U+7B,U+7D,U+5E,U+43,U+26,U+28,U+29,U+2F,U+2D
}

#######增量索引
source twinkledeals_delta : twinkledeals {
	sql_query_pre = SET NAMES utf8
	sql_query_pre = UPDATE eload_sphinx_counter SET begin_time=UNIX_TIMESTAMP() WHERE index_name='twinkledeals'
	sql_query = select g.goods_id,is_24h_ship,ge.is_distribution,LENGTH(TRIM(`goods_brand`)) as goods_brand_len,g.goods_sn, g.goods_title, g.goods_name, \
	ge.unsalable, ge.recommended_level, g.goods_brief, g.add_time,g.last_update, g.sort_order, g.group_goods_id, g.point_rate, promote_start_date, promote_end_date, promote_price, g.recommendation, \
	((g.week2sale+1)*LN((IF (ge.available_stock <= 0, 0, ge.available_stock ))+1) ) as cxj, if(ge.img_type=2,1,(if(ge.img_type=1,2,3))) as self_img_type, \
	g.is_free_shipping, g.is_hot,g.is_new, g.is_promote, g.week1sale, g.week2sale, g.potential, g.click_count,IF (g.promote_start_date < UNIX_TIMESTAMP() AND g.promote_end_date > UNIX_TIMESTAMP() AND g.promote_price <> '0.00',g.promote_price,g.shop_price) AS real_shop_price, IF (sr.sort_order>=0 AND sr.start_time < UNIX_TIMESTAMP() AND sr.end_time > UNIX_TIMESTAMP() AND sr.status=1,sr.sort_order,999) AS rc_sort, sr.id as rc_id, g.shop_price, g.is_login, g.cat_id, \
	(if(goods_number=0 OR is_on_sale = 0 OR is_delete = 1,0,1)) as goods_number, gc.conversion_rate,gc.conversion_rate2,ge.goods_grade,ge.facebook_like_count,ge.like_count, \
	ge.recommended_time,ge.shelf_down_type, ge.clearance_discount, ge.clearance_date, ge.goods_model,(if(ge.real_stock=0,0,1)) as real_stock,\
	(if(is_on_sale = 0 OR is_delete = 1,0,1)) as is_on_dispaly,if((g.week2sale-g.week1sale)=0,0,g.week1sale/((g.week2sale-g.week1sale))) as week_percent, \
	CONCAT_WS(' ',g.goods_title,GROUP_CONCAT(ga.attr_value separator ' '),replace(replace(g.goods_search_attr,',',''),'_',' ')) AS goods_title_color_size, \
    ge.review_count AS reviews, CONCAT_WS(' ',g.goods_search_attr,CONCAT(',',GROUP_CONCAT(ga.attr_value separator ', ,'),',')) AS goods_attr, \
	REPLACE(g.goods_search_attr,',','') AS goods_search_attr_test, \
    CONCAT(IF(g.promote_start_date<UNIX_TIMESTAMP() AND g.promote_end_date>UNIX_TIMESTAMP(), 2, 1), EXISTS(SELECT goods_id FROM eload_goods_tuijian WHERE goods_id=g.goods_id AND (is_best=1 OR is_new=1 OR is_hot=1))) AS hot_order \
    FROM eload_goods as g \
    LEFT JOIN eload_goods_extend as ge ON g.goods_id = ge.goods_id \
    LEFT JOIN eload_goods_attr as ga ON g.goods_id = ga.goods_id \
	LEFT JOIN eload_goods_conversion_rate AS gc ON g.goods_id=gc.goods_id \
	LEFT JOIN eload_search_recommend AS sr ON g.goods_id=sr.goods_id \
    WHERE g.is_alone_sale = 1 AND g.goods_thumb != '' AND g.is_on_sale = 1 AND g.is_delete = 0 AND update_time>(SELECT last_time FROM eload_sphinx_counter WHERE index_name='twinkledeals') GROUP BY g.goods_id
}

source twinkledeals_fr_delta : twinkledeals_fr {
	sql_query_pre = SET NAMES utf8
	sql_query_pre = UPDATE eload_sphinx_counter SET begin_time=UNIX_TIMESTAMP() WHERE index_name='twinkledeals_fr'
	
}

index twinkledeals_delta : twinkledeals {
    source                  = twinkledeals_delta
    path                    = /usr/local/sphinx/var/data/twinkledeals_delta
}

index twinkledeals_fr_delta : twinkledeals_fr {
    source                  = twinkledeals_fr_delta
    path                    = /usr/local/sphinx/var/data/twinkledeals_fr_delta
}

#######ABC

source twinkledeals_keywords {
    type                    = mysql
    sql_host                = 192.168.6.71
    sql_user                = root
    sql_pass                = NvGHHsQvo3!90YS@
    sql_db                  = twinkledeals_db

    sql_query_pre           = SET NAMES utf8
    sql_query_pre           = REPLACE INTO eload_sphinx_counter SELECT 'twinkledeals_keywords',MAX(last_update_time),UNIX_TIMESTAMP() FROM eload_abc_index_keywords
    sql_query               = \
                            SELECT keyword_id,SUBSTRING(keyword,1,1) AS first_letter,keyword,cat_id,top_cat_id,goods_num,is_show,lang,IF(word_count>5, 5, word_count) AS word_count,0 AS is_delete \
                            FROM eload_abc_index_keywords
    sql_query_info          = SELECT * FROM eload_abc_index_keywords WHERE keyword_id=$id
    #sql_query_post_index    = CALL sphinx_sql_query_post_index('twinkledeals_keywords', 'twinkledeals_keywords')

    sql_attr_uint           = cat_id
    sql_attr_uint           = top_cat_id
    sql_attr_uint           = word_count
    sql_attr_uint           = is_delete
    sql_field_string         = keyword
    sql_attr_uint           = goods_num
	sql_attr_uint           = is_show
	sql_field_string         = lang
}
source twinkledeals_keywords_delta : twinkledeals_keywords {
    sql_query_pre           = SET NAMES utf8
    sql_query_pre           = UPDATE eload_sphinx_counter SET begin_time=UNIX_TIMESTAMP() WHERE index_name='twinkledeals_keywords'
    #sql_query_post_index    = CALL sphinx_sql_query_post_index('twinkledeals_keywords', 'twinkledeals_keywords_delta')
    sql_query               = \
                            SELECT keyword_id,SUBSTRING(keyword,1,1) AS first_letter,keyword,cat_id,top_cat_id,goods_num,is_show,lang,IF(word_count>5, 5, word_count) AS word_count,0 AS is_delete\
                            FROM eload_abc_index_keywords\
                            WHERE last_update_time>(SELECT last_time FROM eload_sphinx_counter WHERE index_name='twinkledeals_keywords')
}

index twinkledeals_keywords {
    source                  = twinkledeals_keywords
    path                    = /usr/local/sphinx/var/data/twinkledeals_keywords
    charset_table           = 0..9, A..Z->a..z, _, a..z, .
    charset_type            = utf-8

}

index twinkledeals_keywords_delta : twinkledeals_keywords {
    source                  = twinkledeals_keywords_delta
    path                    = /usr/local/sphinx/var/data/twinkledeals_keywords_delta
}


indexer
{
	mem_limit				= 512M 
}


searchd
{
	port					= 961
	log						= /usr/local/sphinx/var/log/t_searchd.log
	query_log				= /usr/local/sphinx/var/log/t_query.log
	read_timeout			= 5
	max_children			= 30
	#限制每批次的查询量。一个OPEN之后的查询量
   
	pid_file				= /usr/local/sphinx/var/log/t_searchd.pid
	 binlog_path             =
      compat_sphinxql_magics  = 0
	  workers			= threads # for RT to work
	  dist_threads = 8
        max_matches				= 15000 
	seamless_rotate			= 1
	preopen_indexes			= 0
	unlink_old				= 1
	max_batch_queries	= 64

}
